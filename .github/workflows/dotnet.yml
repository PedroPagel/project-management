name: .NET + SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test & SonarCloud Analyze
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for Sonar blame/coverage

      # 2️⃣ Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # 3️⃣ Setup Java (required by SonarCloud)
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      # 4️⃣ Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 5️⃣ Cache/Install SonarCloud Scanner
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner (if cache miss)
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      # 6️⃣ BEGIN SonarCloud Analysis
      - name: SonarCloud – begin analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"PedroPagel_project-management" \
            /o:"pedropagel" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${SONAR_TOKEN}"

      # 7️⃣ Restore, Build, Test with correct paths
      - name: Restore dependencies
        run: dotnet restore Project.Management/Project.Management.sln

      - name: Build solution
        run: dotnet build Project.Management/Project.Management.sln --no-restore

      - name: Run Unit Tests
        run: dotnet test /home/runner/work/project-management/project-management/Project.Management/tests/Project.Management.Tests.Unit/Project.Management.Tests.Unit.csproj /p:CollectCoverage=true /p:CoverletOutput="../../CoverageResults/" /p:MergeWith="../../CoverageResults/coverage.json" /p:CoverletOutputFormat=\"opencover,json\" -m:1

      - name: Run Integration Tests
        run: dotnet test /home/runner/work/project-management/project-management/Project.Management/tests/Project.Management.Tests.Integration/Project.Management.Tests.Integration.csproj --no-build --verbosity normal

      # 8️⃣ END SonarCloud Analysis
      - name: SonarCloud – end analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.token="${SONAR_TOKEN}"
