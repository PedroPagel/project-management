# Build, test, and analyze a .NET project with SonarCloud
# -------------------------------------------------------
# • Requires a repository secret named SONAR_TOKEN
# • Replace <ORG_KEY> with your SonarCloud organization key
# • Replace <PROJECT_KEY> with your SonarCloud project key
#   (typically "<org>_<repo>")
#
name: .NET + SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test & SonarCloud Analyze
    runs-on: ubuntu-latest          # Ubuntu is fine; SonarCloud scanner works on Linux

    steps:
      # 1️⃣ Checkout — depth 0 so Sonar sees full history for blame/coverage
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3️⃣ JDK (needed by Sonar scanner)
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      # 4️⃣ Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 5️⃣ Cache / install dotnet‑sonarscanner
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner (if cache miss)
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      # 6️⃣ BEGIN SonarCloud analysis
      - name: SonarCloud – begin analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner \
            begin \
            /k:"PedroPagel_project-management" \
            /o:"PedroPagel" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${SONAR_TOKEN}"

      # 7️⃣ Restore, build, test
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

      # 8️⃣ END SonarCloud analysis (uploads report)
      - name: SonarCloud – end analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner end \
            /d:sonar.token="${SONAR_TOKEN}"
